// AUTOGENERATED. Run generator/main.py to regenerate
/*
[  0   ]
1------- dribblerSeesBall
-1------ ballsensorSeesBall
*/

#ifndef __MCP_SEES_BALL_H
#define __MCP_SEES_BALL_H

#include <stdbool.h>
#include <stdint.h>
#include "MCP_BaseTypes.h"

typedef struct _MCP_SeesBallPayload {
    uint8_t payload[MCP_PACKET_SIZE_MCP_SEES_BALL];
} MCP_SeesBallPayload;

typedef struct _MCP_SeesBall {
    bool       dribblerSeesBall    ; // integer [0, 1]               true if dribbler encoder detects ball
    bool       ballsensorSeesBall  ; // integer [0, 1]               true if ball sensor detects ball
} MCP_SeesBall;

// ================================ GETTERS ================================
static inline bool MCP_SeesBall_get_dribblerSeesBall(MCP_SeesBallPayload *mcpsbp){
    return (mcpsbp->payload[0] & 0b10000000) > 0;
}

static inline bool MCP_SeesBall_get_ballsensorSeesBall(MCP_SeesBallPayload *mcpsbp){
    return (mcpsbp->payload[0] & 0b01000000) > 0;
}

// ================================ SETTERS ================================
static inline void MCP_SeesBall_set_dribblerSeesBall(MCP_SeesBallPayload *mcpsbp, bool dribblerSeesBall){
    mcpsbp->payload[0] = ((dribblerSeesBall << 7) & 0b10000000) | (mcpsbp->payload[0] & 0b01111111);
}

static inline void MCP_SeesBall_set_ballsensorSeesBall(MCP_SeesBallPayload *mcpsbp, bool ballsensorSeesBall){
    mcpsbp->payload[0] = ((ballsensorSeesBall << 6) & 0b01000000) | (mcpsbp->payload[0] & 0b10111111);
}

// ================================ ENCODE ================================
static inline void encodeMCP_SeesBall(MCP_SeesBallPayload *mcpsbp, MCP_SeesBall *mcpsb){
    MCP_SeesBall_set_dribblerSeesBall    (mcpsbp, mcpsb->dribblerSeesBall);
    MCP_SeesBall_set_ballsensorSeesBall  (mcpsbp, mcpsb->ballsensorSeesBall);
}

// ================================ DECODE ================================
static inline void decodeMCP_SeesBall(MCP_SeesBall *mcpsb, MCP_SeesBallPayload *mcpsbp){
    mcpsb->dribblerSeesBall= MCP_SeesBall_get_dribblerSeesBall(mcpsbp);
    mcpsb->ballsensorSeesBall= MCP_SeesBall_get_ballsensorSeesBall(mcpsbp);
}

#endif /*__MCP_SEES_BALL_H*/
