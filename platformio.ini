;Reference for debug_tool/debug_server/upload_command/upload_flags: https://community.platformio.org/t/debugger-with-c232hm-ftdi-stm32/36245/27?page=2
;Reference for why openocd version 11 is used for the STMF303K8: https://community.platformio.org/t/cant-load-to-nucleo-f303k8/34819/9 

[platformio]
include_dir = Core/Inc
src_dir = Core/Src

[env:top_board]
platform = ststm32
board = nucleo_f767zi
framework = stm32cube
debug_tool = custom
debug_server = 
    ${platformio.packages_dir}/tool-openocd/bin/openocd
    -s 
    ${platformio.packages_dir}/tool-openocd/openocd/scripts
    -f 
    interface/stlink.cfg 
    -c 
    transport select hla_swd
    -f
    target/stm32f7x.cfg
	-c
    reset_config none
upload_command = $PROJECT_PACKAGES_DIR/tool-openocd/bin/openocd $UPLOAD_FLAGS -c "program {$SOURCE} verify reset; shutdown;"
upload_flags =
    -d2 
    -s 
    $PROJECT_PACKAGES_DIR/tool-openocd/scripts 
    -f 
    interface/stlink.cfg 
    -c
    transport select hla_swd
    -f 
    target/stm32f7x.cfg
    -c
    reset_config none
extra_scripts = 
	pre:CompilerFlags.py

debug_build_flags = -Og -ggdb3 -g3
optimization = -Og

monitor_speed = 115200

build_src_filter = 
	+<*>
	-<./git>
	-<.svn/>
	-<.md>
	-<.png>
	-<dribbler_board/>
	-<power_board/>
	-<kicker_chipper_board/>

build_flags = 
	-I ./Core/Inc/general
	-I ./Core/Inc/general/microcontroller_communication_protocol
	-I ./Core/Inc/general/microcontroller_communication_protocol/to_top
	-I ./Core/Inc/general/microcontroller_communication_protocol/from_top
	-I ./Core/Inc/general/roboteam_embedded_messages/include
	-I ./Core/Inc/general/Util
	-I ./Core/Inc/top_board
	-I ./Core/Inc/top_board/peripherals
	-I ./Core/Inc/top_board/peripherals/ssd1306
	-I ./Core/Inc/top_board/Control
	-I ./Core/Inc/top_board/FATFS/App
	-I ./Core/Inc/top_board/FATFS/Target
	-I ./Core/Inc/top_board/MTi
	-I ./Core/Inc/top_board/MTi/Lib/MTi
	-I ./Core/Inc/top_board/Middlewares/Third_Party/FatFs/src
	-I ./Core/Inc/top_board/Middlewares/Third_Party/FatFs/src/option
	-I ./Core/Inc/top_board/oled
	-I ./Core/Inc/top_board/oled/menus
	-I ./Core/Inc/top_board/oled/self_tests
	-I ./Core/Inc/top_board/oled/variable_pages
	-I ./Core/Inc/top_board/roboteam_embedded_messages/include
	-I ./Core/Inc/top_board/Util
	-I ./Core/Inc/top_board/Wireless
	-I ./Core/Inc/top_board/Wireless/SX1280
	-Wno-unused-variable ; Disable warnings for unused variables since REM gives a lot of them
	-Wno-unused-function ; Disable warnings for unused functions since REM gives a lot of them
	-Wno-discarded-qualifiers
	-Wdouble-promotion ; Prints warning when a float is implicitly converted to a double, e.g. when not suffixiing a float with f
	-Wfloat-conversion ; Prints warning when a double is implicitly converted to a float, e.g. when assigning a double to a float variable
	-Wunsuffixed-float-constants ; Prints warning when a floating point constant is not suffixed with f
	-fsingle-precision-constant ; Ensures that all floating point constants are 32-bit (not 64-bit doubles), since 32-bit has hardware support on the STM32

[env:power_board]
platform = ststm32
board = nucleo_f303k8
framework = stm32cube
platform_packages = platformio/tool-openocd@^2.1100.211028
debug_tool = custom
debug_server = 
    ${platformio.packages_dir}/tool-openocd@2.1100.211028/bin/openocd
    -s 
    ${platformio.packages_dir}/tool-openocd@2.1100.211028/openocd/scripts
    -f 
    interface/stlink.cfg 
    -c 
    transport select hla_swd
    -f
    target/stm32f3x.cfg
	-c
    reset_config none
upload_command = $PROJECT_PACKAGES_DIR/tool-openocd@2.1100.211028/bin/openocd $UPLOAD_FLAGS -c "program {$SOURCE} verify reset; shutdown;"
upload_flags =
    -d2 
    -s 
    $PROJECT_PACKAGES_DIR/tool-openocd@2.1100.211028/scripts 
    -f 
    interface/stlink.cfg 
    -c
    transport select hla_swd
    -f 
    target/stm32f3x.cfg
    -c
    reset_config none
extra_scripts = 
	pre:CompilerFlags.py

debug_build_flags = -Og -ggdb3 -g3
optimization = -Og

monitor_speed = 115200

build_src_filter = 
	+<*>
	-<./git>
	-<.svn/>
	-<dribbler_board/>
	-<top_board/>
	-<kicker_chipper_board/>

build_flags = 
	-I ./Core/Inc/general
	-I ./Core/Inc/general/microcontroller_communication_protocol
	-I ./Core/Inc/general/microcontroller_communication_protocol/to_power
	-I ./Core/Inc/general/microcontroller_communication_protocol/from_power
	-I ./Core/Inc/general/roboteam_embedded_messages/include
	-I ./Core/Inc/general/Util
	-I ./Core/Inc/power_board
	-I ./Core/Inc/power_board/FATFS/App
	-I ./Core/Inc/power_board/FATFS/Target
	-I ./Core/Inc/power_board/Middlewares/Third_Party/FatFs/src
	-I ./Core/Inc/power_board/Middlewares/Third_Party/FatFs/src/option
	-I ./Core/Inc/power_board/peripherals
	-I ./Core/Inc/power_board/Util
	-Wno-unused-variable ; Disable warnings for unused variables since REM gives a lot of them
	-Wno-unused-function ; Disable warnings for unused functions since REM gives a lot of them
	-Wno-discarded-qualifiers
	-Wdouble-promotion ; Prints warning when a float is implicitly converted to a double, e.g. when not suffixiing a float with f
	-Wfloat-conversion ; Prints warning when a double is implicitly converted to a float, e.g. when assigning a double to a float variable
	-Wunsuffixed-float-constants ; Prints warning when a floating point constant is not suffixed with f
	-fsingle-precision-constant ; Ensures that all floating point constants are 32-bit (not 64-bit doubles), since 32-bit has hardware support on the STM32

[env:dribbler_board]
platform = ststm32
board = nucleo_f303k8
framework = stm32cube
platform_packages = platformio/tool-openocd@^2.1100.211028
debug_tool = custom
debug_server = 
    ${platformio.packages_dir}/tool-openocd@2.1100.211028/bin/openocd
    -s 
    ${platformio.packages_dir}/tool-openocd@2.1100.211028/openocd/scripts
    -f 
    interface/stlink.cfg 
    -c 
    transport select hla_swd
    -f
    target/stm32f3x.cfg
	-c
    reset_config none
upload_command = $PROJECT_PACKAGES_DIR/tool-openocd@2.1100.211028/bin/openocd $UPLOAD_FLAGS -c "program {$SOURCE} verify reset; shutdown;"
upload_flags =
    -d2 
    -s 
    $PROJECT_PACKAGES_DIR/tool-openocd/scripts 
    -f 
    interface/stlink.cfg 
    -c
    transport select hla_swd
    -f 
    target/stm32f3x.cfg
    -c
    reset_config none
extra_scripts = 
	pre:CompilerFlags.py

debug_build_flags = -Og -ggdb3 -g3
optimization = -Og

monitor_speed = 115200

build_src_filter = 
	+<*>
	-<./git>
	-<.svn/>
	-<power_board/>
	-<top_board/>
	-<kicker_chipper_board/>

build_flags = 
	-I ./Core/Inc/general
	-I ./Core/Inc/general/microcontroller_communication_protocol
	-I ./Core/Inc/general/microcontroller_communication_protocol/to_dribbler
	-I ./Core/Inc/general/microcontroller_communication_protocol/from_dribbler
	-I ./Core/Inc/general/roboteam_embedded_messages/include
	-I ./Core/Inc/general/Util
	-I ./Core/Inc/dribbler_board
	-I ./Core/Inc/dribbler_board/FATFS/App
	-I ./Core/Inc/dribbler_board/FATFS/Target
	-I ./Core/Inc/dribbler_board/Middlewares/Third_Party/FatFs/src
	-I ./Core/Inc/dribbler_board/Middlewares/Third_Party/FatFs/src/option
	-I ./Core/Inc/dribbler_board/peripherals
	-I ./Core/Inc/dribbler_board/Util
	-Wno-unused-variable ; Disable warnings for unused variables since REM gives a lot of them
	-Wno-unused-function ; Disable warnings for unused functions since REM gives a lot of them
	-Wno-discarded-qualifiers
	-Wdouble-promotion ; Prints warning when a float is implicitly converted to a double, e.g. when not suffixiing a float with f
	-Wfloat-conversion ; Prints warning when a double is implicitly converted to a float, e.g. when assigning a double to a float variable
	-Wunsuffixed-float-constants ; Prints warning when a floating point constant is not suffixed with f
	-fsingle-precision-constant ; Ensures that all floating point constants are 32-bit (not 64-bit doubles), since 32-bit has hardware support on the STM32

[env:kicker_chipper_board]
platform = ststm32
board = nucleo_f303k8
framework = stm32cube
debug_tool = custom
debug_server = 
    ${platformio.packages_dir}/tool-openocd/bin/openocd
    -s 
    ${platformio.packages_dir}/tool-openocd/openocd/scripts
    -f 
    interface/stlink.cfg 
    -c 
    transport select hla_swd
    -f
    target/stm32f3x.cfg
	-c
    reset_config none
upload_command = $PROJECT_PACKAGES_DIR/tool-openocd/bin/openocd $UPLOAD_FLAGS -c "program {$SOURCE} verify reset; shutdown;"
upload_flags =
    -d2 
    -s 
    $PROJECT_PACKAGES_DIR/tool-openocd/scripts 
    -f 
    interface/stlink.cfg 
    -c
    transport select hla_swd
    -f 
    target/stm32f3x.cfg
    -c
    reset_config none
extra_scripts = 
	pre:CompilerFlags.py

debug_build_flags = -Og -ggdb3 -g3
optimization = -Og

monitor_speed = 115200

build_src_filter = 
	+<*>
	-<./git>
	-<.svn/>
	-<dribbler_board/>
	-<top_board/>
	-<power_board/>

build_flags = 
	-I ./Core/Inc/general
	-I ./Core/Inc/general/microcontroller_communication_protocol
	-I ./Core/Inc/general/microcontroller_communication_protocol/to_kicker
	-I ./Core/Inc/general/microcontroller_communication_protocol/from_kicker
	-I ./Core/Inc/general/roboteam_embedded_messages/include
	-I ./Core/Inc/general/Util
	-I ./Core/Inc/kicker_chipper_board
	-I ./Core/Inc/kicker_chipper_board/FATFS/App
	-I ./Core/Inc/kicker_chipper_board/FATFS/Target
	-I ./Core/Inc/kicker_chipper_board/Middlewares/Third_Party/FatFs/src
	-I ./Core/Inc/kicker_chipper_board/Middlewares/Third_Party/FatFs/src/option
	-I ./Core/Inc/kicker_chipper_board/peripherals
	-I ./Core/Inc/kicker_chipper_board/Util
	-Wno-unused-variable ; Disable warnings for unused variables since REM gives a lot of them
	-Wno-unused-function ; Disable warnings for unused functions since REM gives a lot of them
	-Wno-discarded-qualifiers
	-Wdouble-promotion ; Prints warning when a float is implicitly converted to a double, e.g. when not suffixiing a float with f
	-Wfloat-conversion ; Prints warning when a double is implicitly converted to a float, e.g. when assigning a double to a float variable
	-Wunsuffixed-float-constants ; Prints warning when a floating point constant is not suffixed with f
	-fsingle-precision-constant ; Ensures that all floating point constants are 32-bit (not 64-bit doubles), since 32-bit has hardware support on the STM32